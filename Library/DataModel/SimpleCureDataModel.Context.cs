//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Library.DataModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SimpleCureEntities : DbContext
    {
        public SimpleCureEntities()
            : base("name=SimpleCureEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<AccountChangeLog> AccountChangeLogs { get; set; }
        public virtual DbSet<AppError> AppErrors { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<AspNetUsersLoginAttempt> AspNetUsersLoginAttempts { get; set; }
        public virtual DbSet<BusinessType> BusinessTypes { get; set; }
        public virtual DbSet<Discount> Discounts { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<OrderActivity> OrderActivities { get; set; }
        public virtual DbSet<OrderDiscount> OrderDiscounts { get; set; }
        public virtual DbSet<OrderStatu> OrderStatus { get; set; }
        public virtual DbSet<ProductGroup> ProductGroups { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<Tbl_Customers> Tbl_Customers { get; set; }
        public virtual DbSet<ALL> ALL { get; set; }
        public virtual DbSet<Tbl_Activity_Main> Tbl_Activity_Main { get; set; }
        public virtual DbSet<Tbl_Activity_Sub> Tbl_Activity_Sub { get; set; }
        public virtual DbSet<Tbl_BudTrim> Tbl_BudTrim { get; set; }
        public virtual DbSet<Tbl_Company> Tbl_Company { get; set; }
        public virtual DbSet<Tbl_Employees> Tbl_Employees { get; set; }
        public virtual DbSet<Tbl_Finances> Tbl_Finances { get; set; }
        public virtual DbSet<Tbl_IndustryType> Tbl_IndustryType { get; set; }
        public virtual DbSet<Tbl_InvoiceIDs> Tbl_InvoiceIDs { get; set; }
        public virtual DbSet<Tbl_Lots_Purchased> Tbl_Lots_Purchased { get; set; }
        public virtual DbSet<Tbl_Month> Tbl_Month { get; set; }
        public virtual DbSet<Tbl_Products> Tbl_Products { get; set; }
        public virtual DbSet<Tbl_Products_Dominant> Tbl_Products_Dominant { get; set; }
        public virtual DbSet<Tbl_Products_Type> Tbl_Products_Type { get; set; }
        public virtual DbSet<Tbl_RunTypes> Tbl_RunTypes { get; set; }
        public virtual DbSet<Tbl_SC_Extractions> Tbl_SC_Extractions { get; set; }
        public virtual DbSet<Tbl_SC_Supply> Tbl_SC_Supply { get; set; }
        public virtual DbSet<Tbl_Units> Tbl_Units { get; set; }
        public virtual DbSet<Tbl_Vendors> Tbl_Vendors { get; set; }
        public virtual DbSet<OrderProductActivity> OrderProductActivities { get; set; }
        public virtual DbSet<OrderProduct> OrderProducts { get; set; }
        public virtual DbSet<PaidOrder> PaidOrders { get; set; }
        public virtual DbSet<Suggestion> Suggestions { get; set; }
        public virtual DbSet<SuggestionStatu> SuggestionStatus { get; set; }
        public virtual DbSet<SuggestionWorkLog> SuggestionWorkLogs { get; set; }
        public virtual DbSet<OrderProductAndDiscount> OrderProductAndDiscounts { get; set; }
    
        public virtual int uspSearchPaidOrders(string searchTerm)
        {
            var searchTermParameter = searchTerm != null ?
                new ObjectParameter("SearchTerm", searchTerm) :
                new ObjectParameter("SearchTerm", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSearchPaidOrders", searchTermParameter);
        }
    }
}
