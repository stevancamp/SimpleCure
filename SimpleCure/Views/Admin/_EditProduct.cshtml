@model SimpleCure.Models.ProductModels.EditProduct_ViewModel

@{
    var imgSrc = string.Empty;
    if (Model.ProductImage != null)
    {
        var base64 = Convert.ToBase64String(Model.ProductImage);
        imgSrc = String.Format("data:image/gif;base64,{0}", base64);
    }
}

@using (Html.BeginForm("SaveEditProduct", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(m => m.ID)
    <div class="card">
        <div class="card-header d-flex align-items-center">
            <h4>Edit Product</h4>
        </div>
        <div class="card-body">
            <div class="form-group">
                @Html.LabelFor(m => m.Type, new { @class = "form-control-label" })
                @Html.TextBoxFor(m => m.Type, new { @class = "form-control", required = "required" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Description, new { @class = "form-control-label" })
                @Html.TextAreaFor(m => m.Description, new { @class = "form-control", required = "required", @rows = "3" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Strain, new { @class = "form-control-label" })
                @Html.TextBoxFor(m => m.Strain, new { @class = "form-control", required = "required" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Dominant, new { @class = "form-control-label" })
                @Html.TextBoxFor(m => m.Dominant, new { @class = "form-control", required = "required" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.CartGram, new { @class = "form-control-label" })
                @Html.TextBoxFor(m => m.CartGram, new { @class = "form-control", required = "required", @type = "number" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.PricePerUnit, new { @class = "form-control-label" })
                @Html.TextBoxFor(m => m.PricePerUnit, new { @class = "form-control", required = "required", @type = "number" })
            </div>
            <div class="form-group">
                <div class="custom-control custom-checkbox">
                    @Html.CheckBoxFor(m => m.IsActive, new { @class = "custom-control-input" })
                    @Html.LabelFor(m => m.IsActive, new { @class = "custom-control-label" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ProductGroup, new { @class = "form-control-label" })
                @Html.DropDownListFor(m => m.ProductGroup, new SelectList(
                Model.ProductGroupList.Select(x => new { Value = x.GroupName, Text = x.GroupName }),
                "Value",
                "Text"
                ), new { @class = "form-control", required = "required" })
            </div>
            <div class="form-group">
                <p>Current Product Image</p>
                @if (!string.IsNullOrEmpty(imgSrc))
                {
                    <img src="@imgSrc" />
                }
                else
                {

                    <p>No Image for this product</p>
                }

                <p>New Product Image</p>
                <input type="file" name="NewProductImage" id="NewProductImage" accept=".png,.jpg,.jpeg" />
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-primary">Save Changes</button>
                <a href="#DeleteModal" role="button" class="btn btn-danger" data-toggle="modal">Delete</a>
            </div>
        </div>
    </div>
}


<div class="modal fade" id="DeleteModal" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="myModalLabel">
                    Delete Product
                </h5>
                <button type="button" class="close" data-dismiss="modal">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure that you want to delete this Product @Model.Type from the database forever?
            </div>
            <div class="modal-footer">
                @using (Html.BeginForm("DeleteProduct", "Admin"))
                {
                    @Html.HiddenFor(m => m.ID)
                    <button type="submit" class="btn btn-danger">Delete</button>
                }
                <button type="button" class="btn btn-secondary" data-dismiss="modal">
                    Close
                </button>
            </div>
        </div>
    </div>
</div>


